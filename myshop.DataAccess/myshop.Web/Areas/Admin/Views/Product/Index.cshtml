@model IEnumerable<ProductViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewBag.PageTitle = "Product Management";
    ViewBag.CardTitle = "All Products";
    Layout = "~/Views/Shared/_Dashboard.cshtml";

}

<a asp-action="Create" class="btn btn-primary mb-3">Create New Product</a>
<div class="table-responsive">
    <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => model.Name)</th>
                    <th scope="col">@Html.DisplayNameFor(model => model.Description)</th>
                    <th scope="col">@Html.DisplayNameFor(Model => Model.Price)</th>
                    <th scope="col">Category Name</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.Price.ToString("C")</td>
                        <td>@product.category.Name</td>
                        <td>
                            <a asp-action="Edit" class="btn btn-warning btn-sm" asp-route-id="@product.Id">Edit</a>
                            <a asp-action="Delete" class="btn btn-danger btn-sm" asp-route-id="@product.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
    </table>

</div>
        <!-- Adding a div to wrap and center the pagination -->
        <div class="d-flex justify-content-center mt-4">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
            })
        </div>
</div>
