@model IEnumerable<ApplicationUser>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewBag.CardTitle = "All Users";
    ViewBag.PageTitle = "Users Management";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<a asp-area="Identity" asp-controller="Account" asp-action="Register" class="btn btn-primary">Create New User</a>
<br />
<br />
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">@Html.DisplayNameFor(model => model.Name)</th>
                <th scope="col">@Html.DisplayNameFor(model => model.Email)</th>
                <th scope="col">@Html.DisplayNameFor(Model => Model.PhoneNumber)</th>
                <th>Actions</th>
            </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <th scope="row">@user.Name</th>
                <td>@user.Email</td>
                <td>@user.PhoneNumber</td>
                <td>
                    @if (user.LockoutEnd == null || user.LockoutEnd < DateTime.Now)
                    {
                        <a class="btn btn-success" asp-action="LockUnlock" asp-route-id="@user.Id">
                            <i class="fas fa-lock-open"></i>
                        </a>
                    } else
                    {
                        <a class="btn btn-danger" asp-action="LockUnlock" asp-route-id="@user.Id">
                            <i class="fas fa-lock"></i>
                        </a>
                    }

                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@user.Id">Delete</a>
                </td>
                @* <td><a href="ControllerName/Action/parameters" class="btn btn-danger" asp-route-id="@category.Id">Delete</a></td> *@
            </tr>
        }
    </tbody>
</table>
</div>


<div class="container px-4 px-lg-5 mt-5">
    <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
        <!-- Adding a div to wrap and center the pagination -->
        <div class="d-flex justify-content-center">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new {page}),
            new PagedListRenderOptions{
            LiElementClasses = new string[] {"page-item"},
            PageClasses = new string[] {"page-link"}
            })
        </div>
    </div>
</div>
